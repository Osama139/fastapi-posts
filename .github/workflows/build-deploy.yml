name: Build and Deploy code

on: ["push", "pull_request"]
#  push:
#    branches: ["main"]

jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRES_IN: ${{secrets.ACCESS_TOKEN_EXPIRES_IN}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: install all our dependencies
        run: pip install -r requirements.txt
      - name: Debug env vars
        run: |
           echo "DATABASE_NAME=$DATABASE_NAME"
           python -c "from app.config import settings; print(f'Final DB URL: postgresql://.../{settings.database_name}_test')"
      - name: test with pytest
        run: pytest -v -s --disable-warnings